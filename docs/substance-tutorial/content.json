{
  "id": "tutorial",
  "schema": [
    "substance-article",
    "0.3.0"
  ],
  "nodes": {
    "document": {
      "type": "document",
      "id": "document",
      "views": [
        "content"
      ],
      "guid": "tutorial",
      "creator": "",
      "authors": [],
      "title": "Substance Tutorial",
      "abstract": "",
      "published_on": "2013-10-09T00:00:00.000Z",
      "meta": {},
      "updated_at": "2014-02-24T18:27:53.351Z"
    },
    "content": {
      "type": "view",
      "id": "content",
      "nodes": [
        "cover",
        "text_1",
        "list_1",
        "text_5",
        "header_1",
        "text_6",
        "list_2",
        "text_9",
        "codeblock_1",
        "header_2",
        "text_10",
        "header_3",
        "text_11",
        "codeblock_2",
        "text_12",
        "codeblock_3",
        "header_4",
        "text_13",
        "codeblock_4",
        "text_14",
        "codeblock_5",
        "text_15",
        "header_5",
        "text_16",
        "header_6",
        "text_17",
        "codeblock_6",
        "text_18",
        "codeblock_7",
        "text_19",
        "header_7",
        "text_20",
        "codeblock_8",
        "header_8",
        "text_21",
        "text_22",
        "header_9",
        "text_23",
        "codeblock_9",
        "text_24",
        "codeblock_10",
        "header_10",
        "text_25",
        "codeblock_11",
        "text_26",
        "codeblock_12",
        "text_27",
        "codeblock_13",
        "text_28",
        "codeblock_14",
        "text_29",
        "text_30",
        "codeblock_15",
        "text_31"
      ]
    },
    "figures": {
      "type": "view",
      "id": "figures",
      "nodes": [
        "figure_1",
        "figure_2",
        "figure_3"
      ]
    },
    "citations": {
      "type": "view",
      "id": "citations",
      "nodes": []
    },
    "info": {
      "type": "view",
      "id": "info",
      "nodes": []
    },
    "errors": {
      "type": "view",
      "id": "errors",
      "nodes": []
    },
    "remarks": {
      "type": "view",
      "id": "remarks",
      "nodes": []
    },
    "text_1": {
      "type": "text",
      "id": "text_1",
      "source_id": "",
      "content": "Welcome to the Substance Tutorial. You'll learn:"
    },
    "text_2": {
      "type": "text",
      "id": "text_2",
      "source_id": "",
      "content": "How to convert a Markdown file into a Substance Article"
    },
    "text_3": {
      "type": "text",
      "id": "text_3",
      "source_id": "",
      "content": "Display Substance content in our interactive reader."
    },
    "text_4": {
      "type": "text",
      "id": "text_4",
      "source_id": "",
      "content": "Create a customized renderer"
    },
    "list_1": {
      "type": "list",
      "id": "list_1",
      "source_id": "",
      "items": [
        "text_2",
        "text_3",
        "text_4"
      ],
      "ordered": true
    },
    "text_5": {
      "type": "text",
      "id": "text_5",
      "source_id": "",
      "content": "The tutorial is at an early stage. We'd like to improve it over time and always keep it up to date with our latest API's. You can help us making this tutorial better by contributing to the source Markdown file and also to the example code."
    },
    "header_1": {
      "type": "heading",
      "id": "header_1",
      "source_id": "preparations",
      "content": "Preparations",
      "level": 1
    },
    "text_6": {
      "type": "text",
      "id": "text_6",
      "source_id": "",
      "content": "Make sure you have the following software packages installed on your computer before starting over with the tutorial."
    },
    "text_7": {
      "type": "text",
      "id": "text_7",
      "source_id": "",
      "content": "Node.js >=0.10.x"
    },
    "text_8": {
      "type": "text",
      "id": "text_8",
      "source_id": "",
      "content": "Pandoc >= 1.12.0.2"
    },
    "list_2": {
      "type": "list",
      "id": "list_2",
      "source_id": "",
      "items": [
        "text_7",
        "text_8"
      ],
      "ordered": false
    },
    "text_9": {
      "type": "text",
      "id": "text_9",
      "source_id": "",
      "content": "Please clone the Substance Tutorial repo, which has the complete code for the examples."
    },
    "codeblock_1": {
      "type": "codeblock",
      "id": "codeblock_1",
      "source_id": "",
      "content": "$ git clone https://github.com/substance/tutorial"
    },
    "header_2": {
      "type": "heading",
      "id": "header_2",
      "source_id": "convert",
      "content": "Turn a Markdown file into a Substance Article",
      "level": 1
    },
    "text_10": {
      "type": "text",
      "id": "text_10",
      "source_id": "",
      "content": "Here comes the first lesson. Let's suppose we have a markdown document lorem_ipsum.md that we'd like to turn into a Substance.Article. Substance ships with its own converter module, which makes use of Pandoc, a universal document conversion tool. Let's create a little node program that takes a Markdown file as an input, turns it into a Substance Article and stores the resulting JSON in a new file."
    },
    "header_3": {
      "type": "heading",
      "id": "header_3",
      "source_id": "setup",
      "content": "Setup",
      "level": 2
    },
    "text_11": {
      "type": "text",
      "id": "text_11",
      "source_id": "",
      "content": "With your console navigate to the first lesson."
    },
    "codeblock_2": {
      "type": "codeblock",
      "id": "codeblock_2",
      "source_id": "",
      "content": "$ cd 001-convert-md-to-substance"
    },
    "text_12": {
      "type": "text",
      "id": "text_12",
      "source_id": "",
      "content": "Pull-in dependencies using NPM."
    },
    "codeblock_3": {
      "type": "codeblock",
      "id": "codeblock_3",
      "source_id": "",
      "content": "$ npm install"
    },
    "header_4": {
      "type": "heading",
      "id": "header_4",
      "source_id": "procedure",
      "content": "Procedure",
      "level": 2
    },
    "text_13": {
      "type": "text",
      "id": "text_13",
      "source_id": "",
      "content": "Now take a glance at the convert.js file. That's all you need for a simple conversion tool, by just delegating the hard work to the Substance.Converter, and of course Pandoc."
    },
    "codeblock_4": {
      "type": "codeblock",
      "id": "codeblock_4",
      "source_id": "",
      "content": "var fs = require('fs');\nvar Converter = require(\"substance-converter\");\n\n// Parse command line arguments\n// -----------\n\nvar inputFile = process.argv[2];\nvar outputFile = process.argv[3];\n\n// Read markdown input\n// -----------\n\nvar inputDoc = fs.readFileSync(inputFile, \"utf8\");\n\n// Do the converstion\n// -----------\n\nvar converter = new Converter();\n\nconverter.convert(inputDoc, 'markdown', 'substance', function(err, doc) {\n  if (err) {\n    return console.error(err);\n  }\n  fs.writeFileSync(outputFile, JSON.stringify(doc, null, '  '));\n});"
    },
    "text_14": {
      "type": "text",
      "id": "text_14",
      "source_id": "",
      "content": "Call your node program, to finally perform the conversion."
    },
    "codeblock_5": {
      "type": "codeblock",
      "id": "codeblock_5",
      "source_id": "",
      "content": "$ node convert.js lorem_ipsum.md lorem_ipsum.json"
    },
    "text_15": {
      "type": "text",
      "id": "text_15",
      "source_id": "",
      "content": "Great. Now do the same with your very own Markdown document. If you don't get to convert your markdown file, please let us know in the issue tracker."
    },
    "header_5": {
      "type": "heading",
      "id": "header_5",
      "source_id": "display",
      "content": "Present your article",
      "level": 1
    },
    "text_16": {
      "type": "text",
      "id": "text_16",
      "source_id": "",
      "content": "In collaboration with eLife, we have developed an interactive reader for scientific documents which is based on the Substance Document Model, eLife Lens. In this lesson we'll be displaying your freshly generated Substance Article using a customized build of eLife Lens, the Substance.Reader."
    },
    "header_6": {
      "type": "heading",
      "id": "header_6",
      "source_id": "setup-1",
      "content": "Setup",
      "level": 2
    },
    "text_17": {
      "type": "text",
      "id": "text_17",
      "source_id": "",
      "content": "Navigate to lesson 2."
    },
    "codeblock_6": {
      "type": "codeblock",
      "id": "codeblock_6",
      "source_id": "",
      "content": "$ cd 002-display-document"
    },
    "text_18": {
      "type": "text",
      "id": "text_18",
      "source_id": "",
      "content": "The folder contains a stable build of the Substance.Reader. Since the document is loaded via AJAX, you just need to serve the folder through a webserver. The probably easiest way to do this is starting Python's SimpleHTTPServer, that ships with most operating systems."
    },
    "codeblock_7": {
      "type": "codeblock",
      "id": "codeblock_7",
      "source_id": "",
      "content": "$ python -m SimpleHTTPServer"
    },
    "text_19": {
      "type": "text",
      "id": "text_19",
      "source_id": "",
      "content": "Open your browser and navigate to http://localhost:8000. You should see a default document (Figure 1)."
    },
    "header_7": {
      "type": "heading",
      "id": "header_7",
      "source_id": "procedure-1",
      "content": "Procedure",
      "level": 2
    },
    "text_20": {
      "type": "text",
      "id": "text_20",
      "source_id": "",
      "content": "Now store a copy of your Substance document in the data folder (e.g. data/mydoc.json. You also need to adjust index.html so it points to your document like so:"
    },
    "codeblock_8": {
      "type": "codeblock",
      "id": "codeblock_8",
      "source_id": "",
      "content": "var app = new Substance({\n  // Endpoint must have CORS enabled, or file is served from the same domain as the app\n  document_url: \"http://example.com/path/to/any-substance-doc.json\"\n});"
    },
    "header_8": {
      "type": "heading",
      "id": "header_8",
      "source_id": "renderer",
      "content": "Create a customized renderer",
      "level": 1
    },
    "text_21": {
      "type": "text",
      "id": "text_21",
      "source_id": "",
      "content": "Displaying the document in the official Substance.Reader is great, but what if you wanted to present your article in a more customized fashion?"
    },
    "text_22": {
      "type": "text",
      "id": "text_22",
      "source_id": "",
      "content": "You don't have to write it from scratch. You can utilize Substance.Surface which powers our reader and editor."
    },
    "header_9": {
      "type": "heading",
      "id": "header_9",
      "source_id": "setup-2",
      "content": "Setup",
      "level": 2
    },
    "text_23": {
      "type": "text",
      "id": "text_23",
      "source_id": "",
      "content": "Navigate to lesson 3."
    },
    "codeblock_9": {
      "type": "codeblock",
      "id": "codeblock_9",
      "source_id": "",
      "content": "$ cd 003-customized-renderer"
    },
    "text_24": {
      "type": "text",
      "id": "text_24",
      "source_id": "",
      "content": "Again start our little Python server."
    },
    "codeblock_10": {
      "type": "codeblock",
      "id": "codeblock_10",
      "source_id": "",
      "content": "$ python -m SimpleHTTPServer"
    },
    "header_10": {
      "type": "heading",
      "id": "header_10",
      "source_id": "procedure-2",
      "content": "Procedure",
      "level": 2
    },
    "text_25": {
      "type": "text",
      "id": "text_25",
      "source_id": "",
      "content": "Using the Substance Surface is really easy. The first thing to do is constructing a Substance.Article based on our JSON input. Again, you need to adjust index.html:"
    },
    "codeblock_11": {
      "type": "codeblock",
      "id": "codeblock_11",
      "source_id": "",
      "content": "var doc = Substance.Article.fromSnapshot(loremIpsumDoc);"
    },
    "text_26": {
      "type": "text",
      "id": "text_26",
      "source_id": "",
      "content": "A Substance document stores multiple views on its content (Figure 2). In our case we're interested in the content view. Therefore we create a Document.Controller instance that we need to paramatrize the Surface."
    },
    "codeblock_12": {
      "type": "codeblock",
      "id": "codeblock_12",
      "source_id": "",
      "content": "var docCtrl = new Substance.Document.Controller(doc, {\n  view: \"content\"\n});"
    },
    "text_27": {
      "type": "text",
      "id": "text_27",
      "source_id": "",
      "content": "Now we are ready to create the Substance.Surface instance."
    },
    "codeblock_13": {
      "type": "codeblock",
      "id": "codeblock_13",
      "source_id": "",
      "content": "var surface = new Substance.Surface(docCtrl, {\n  editable: false\n});"
    },
    "text_28": {
      "type": "text",
      "id": "text_28",
      "source_id": "",
      "content": "Let's wait until the DOM is ready and then render the document and attach it to the body element."
    },
    "codeblock_14": {
      "type": "codeblock",
      "id": "codeblock_14",
      "source_id": "",
      "content": "$(function() {\n  $('body').append(surface.render().el);\n});"
    },
    "text_29": {
      "type": "text",
      "id": "text_29",
      "source_id": "",
      "content": "The markup that is produced by the Surface using the Substance.Article definition is pretty straight forward (Figure 3)."
    },
    "text_30": {
      "type": "text",
      "id": "text_30",
      "source_id": "",
      "content": "You can easiliy come up with your very own CSS styles. For instance let's add some styles for headings in article.css:"
    },
    "codeblock_15": {
      "type": "codeblock",
      "id": "codeblock_15",
      "source_id": "",
      "content": ".surface.content .content-node.heading {\n  font-weight: bold;\n  color: #0089D3;\n}\n\n.surface.content .content-node.heading.level-1 {\n  font-size: 25px;\n}"
    },
    "text_31": {
      "type": "text",
      "id": "text_31",
      "source_id": "",
      "content": "A more complete functioning codebase is located in the index.html file and article.css."
    },
    "link_4": {
      "type": "link",
      "id": "link_4",
      "path": [
        "text_5",
        "content"
      ],
      "range": [
        196,
        209
      ],
      "url": "https://github.com/substance/docs/blob/0.1.x/substance/tutorial/content.md"
    },
    "link_5": {
      "type": "link",
      "id": "link_5",
      "path": [
        "text_5",
        "content"
      ],
      "range": [
        226,
        238
      ],
      "url": "http://github.com/substance/tutorial"
    },
    "emphasis_1": {
      "type": "emphasis",
      "id": "emphasis_1",
      "path": [
        "text_5",
        "content"
      ],
      "range": [
        0,
        239
      ]
    },
    "link_6": {
      "type": "link",
      "id": "link_6",
      "path": [
        "text_7",
        "content"
      ],
      "range": [
        0,
        7
      ],
      "url": "http://nodejs.org/"
    },
    "link_7": {
      "type": "link",
      "id": "link_7",
      "path": [
        "text_8",
        "content"
      ],
      "range": [
        0,
        6
      ],
      "url": "http://johnmacfarlane.net/pandoc/"
    },
    "link_8": {
      "type": "link",
      "id": "link_8",
      "path": [
        "text_9",
        "content"
      ],
      "range": [
        17,
        35
      ],
      "url": "https://github.com/substance/tutorial"
    },
    "code_1": {
      "type": "code",
      "id": "code_1",
      "path": [
        "text_10",
        "content"
      ],
      "range": [
        71,
        85
      ]
    },
    "link_9": {
      "type": "link",
      "id": "link_9",
      "path": [
        "text_10",
        "content"
      ],
      "range": [
        116,
        133
      ],
      "url": "http://github.com/substance/article"
    },
    "link_10": {
      "type": "link",
      "id": "link_10",
      "path": [
        "text_10",
        "content"
      ],
      "range": [
        164,
        173
      ],
      "url": "http://github.com/substance/converter"
    },
    "code_2": {
      "type": "code",
      "id": "code_2",
      "path": [
        "text_13",
        "content"
      ],
      "range": [
        25,
        35
      ]
    },
    "link_11": {
      "type": "link",
      "id": "link_11",
      "path": [
        "text_15",
        "content"
      ],
      "range": [
        135,
        148
      ],
      "url": "https://github.com/substance/converter/issues"
    },
    "link_12": {
      "type": "link",
      "id": "link_12",
      "path": [
        "text_16",
        "content"
      ],
      "range": [
        22,
        27
      ],
      "url": "http://elifesciences.org"
    },
    "link_13": {
      "type": "link",
      "id": "link_13",
      "path": [
        "text_16",
        "content"
      ],
      "range": [
        142,
        152
      ],
      "url": "http://lens.substance.io"
    },
    "link_14": {
      "type": "link",
      "id": "link_14",
      "path": [
        "text_16",
        "content"
      ],
      "range": [
        274,
        290
      ],
      "url": "http://github.com/substance/reader"
    },
    "code_3": {
      "type": "code",
      "id": "code_3",
      "path": [
        "text_18",
        "content"
      ],
      "range": [
        42,
        58
      ]
    },
    "code_4": {
      "type": "code",
      "id": "code_4",
      "path": [
        "text_19",
        "content"
      ],
      "range": [
        34,
        55
      ]
    },
    "code_5": {
      "type": "code",
      "id": "code_5",
      "path": [
        "text_20",
        "content"
      ],
      "range": [
        69,
        84
      ]
    },
    "code_6": {
      "type": "code",
      "id": "code_6",
      "path": [
        "text_20",
        "content"
      ],
      "range": [
        110,
        120
      ]
    },
    "link_16": {
      "type": "link",
      "id": "link_16",
      "path": [
        "text_22",
        "content"
      ],
      "range": [
        57,
        74
      ],
      "url": "http://github.com/substance/surface"
    },
    "code_7": {
      "type": "code",
      "id": "code_7",
      "path": [
        "text_25",
        "content"
      ],
      "range": [
        84,
        101
      ]
    },
    "code_8": {
      "type": "code",
      "id": "code_8",
      "path": [
        "text_25",
        "content"
      ],
      "range": [
        153,
        163
      ]
    },
    "code_9": {
      "type": "code",
      "id": "code_9",
      "path": [
        "text_26",
        "content"
      ],
      "range": [
        106,
        113
      ]
    },
    "code_10": {
      "type": "code",
      "id": "code_10",
      "path": [
        "text_26",
        "content"
      ],
      "range": [
        142,
        161
      ]
    },
    "code_11": {
      "type": "code",
      "id": "code_11",
      "path": [
        "text_26",
        "content"
      ],
      "range": [
        203,
        210
      ]
    },
    "code_12": {
      "type": "code",
      "id": "code_12",
      "path": [
        "text_29",
        "content"
      ],
      "range": [
        53,
        70
      ]
    },
    "code_13": {
      "type": "code",
      "id": "code_13",
      "path": [
        "text_30",
        "content"
      ],
      "range": [
        106,
        117
      ]
    },
    "code_14": {
      "type": "code",
      "id": "code_14",
      "path": [
        "text_31",
        "content"
      ],
      "range": [
        55,
        65
      ]
    },
    "code_15": {
      "type": "code",
      "id": "code_15",
      "path": [
        "text_31",
        "content"
      ],
      "range": [
        75,
        86
      ]
    },
    "cover": {
      "type": "cover",
      "id": "cover",
      "source_id": "",
      "image": ""
    },
    "caption_figure_1": {
      "type": "text",
      "id": "caption_figure_1",
      "source_id": "",
      "content": "A Substance document shown in our reader app."
    },
    "figure_1": {
      "type": "figure",
      "id": "figure_1",
      "label": "Figure 1",
      "caption": "caption_figure_1",
      "image": "figure_1.png"
    },
    "caption_figure_2": {
      "type": "text",
      "id": "caption_figure_2",
      "source_id": "",
      "content": "A Substance document can handle multiple views on its content nodes."
    },
    "figure_2": {
      "type": "figure",
      "id": "figure_2",
      "label": "Figure 2",
      "caption": "caption_figure_2",
      "image": "figure_2.png"
    },
    "caption_figure_3": {
      "type": "text",
      "id": "caption_figure_3",
      "source_id": "",
      "content": "Markup produced by the Substance Surface."
    },
    "figure_3": {
      "type": "figure",
      "id": "figure_3",
      "label": "Figure 3",
      "caption": "caption_figure_3",
      "image": "figure_3.png"
    },
    "cross_reference_1": {
      "type": "cross_reference",
      "id": "cross_reference_1",
      "path": [
        "text_2",
        "content"
      ],
      "range": [
        7,
        14
      ],
      "target": "header_2"
    },
    "cross_reference_2": {
      "type": "cross_reference",
      "id": "cross_reference_2",
      "path": [
        "text_3",
        "content"
      ],
      "range": [
        0,
        7
      ],
      "target": "header_5"
    },
    "cross_reference_3": {
      "type": "cross_reference",
      "id": "cross_reference_3",
      "path": [
        "text_4",
        "content"
      ],
      "range": [
        20,
        28
      ],
      "target": "header_8"
    },
    "figure_reference_1": {
      "type": "figure_reference",
      "id": "figure_reference_1",
      "path": [
        "text_19",
        "content"
      ],
      "range": [
        92,
        100
      ],
      "target": "figure_1"
    },
    "figure_reference_2": {
      "type": "figure_reference",
      "id": "figure_reference_2",
      "path": [
        "text_26",
        "content"
      ],
      "range": [
        59,
        67
      ],
      "target": "figure_2"
    },
    "figure_reference_3": {
      "type": "figure_reference",
      "id": "figure_reference_3",
      "path": [
        "text_29",
        "content"
      ],
      "range": [
        110,
        118
      ],
      "target": "figure_3"
    },
    "figure_1.png": {
      "type": "file",
      "id": "figure_1.png",
      "version": 1,
      "content_type": "image/png"
    },
    "figure_2.png": {
      "type": "file",
      "id": "figure_2.png",
      "version": 1,
      "content_type": "image/png"
    },
    "figure_3.png": {
      "type": "file",
      "id": "figure_3.png",
      "version": 1,
      "content_type": "image/png"
    }
  }
}